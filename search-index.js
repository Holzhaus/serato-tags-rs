var searchIndex = JSON.parse('{\
"serato_tags":{"doc":"","i":[[0,"container","serato_tags","This module provides the `Container` class.",null,null],[3,"Container","serato_tags::container","Provides a streamlined interface for retrieving Serato tag…",null,null],[12,"analysis","","",0,null],[12,"autotags","","",0,null],[12,"beatgrid","","",0,null],[12,"markers","","",0,null],[12,"markers2","","",0,null],[12,"overview","","",0,null],[11,"new","","Create an empty Serato tag container.",0,[[]]],[11,"auto_gain","","Returns the auto_gain value from the `Serato Autotags` tag.",0,[[],["option",4]]],[11,"gain_db","","Returns the gain_db value from the `Serato Autotags` tag.",0,[[],["option",4]]],[11,"beatgrid","","Returns the beatgrid from the `Serato BeatGrid` tag.",0,[[],["option",4]]],[11,"bpm_locked","","Returns BPM lock status from the `Serato Markers2` tag.",0,[[],["option",4]]],[11,"cues","","Returns cues from the `Serato Markers_` and `Serato…",0,[[],[["vec",3],["cuemarker",3]]]],[11,"loops","","Returns loops from the `Serato Markers_` and `Serato…",0,[[],[["loopmarker",3],["vec",3]]]],[11,"track_color","","Returns the track color from the `Serato Markers_` and…",0,[[],[["color",3],["option",4]]]],[11,"overview","","Returns the waveform overview data color from the `Serato…",0,[[],[["vec",3],["option",4]]]],[0,"error","serato_tags","",null,null],[4,"Error","serato_tags::error","Error enumerates all possible errors returned by this…",null,null],[13,"ParseError","","Represents an generic parse error.",1,null],[13,"ParseIncomplete","","Represents an generic parse error.",1,null],[13,"VerboseParseError","","Represents an generic parse error.",1,null],[12,"errors","serato_tags::error::Error","",2,null],[13,"Base64DecodeError","serato_tags::error","Represents decode error.",1,null],[12,"source","serato_tags::error::Error","",3,null],[13,"Base64InvalidLengthError","serato_tags::error","Represents decode error.",1,null],[12,"length","serato_tags::error::Error","",4,null],[13,"EnvelopeParseError","serato_tags::error","Represents decode error.",1,null],[13,"EnvelopeNameMismatch","","Represents decode error.",1,null],[12,"expected","serato_tags::error::Error","",5,null],[12,"actual","","",5,null],[13,"ReadError","serato_tags::error","Represents a failure to read from input.",1,null],[12,"source","serato_tags::error::Error","",6,null],[13,"IOError","serato_tags::error","Represents all other cases of `std::io::Error`.",1,null],[0,"tag","serato_tags","",null,null],[0,"format","serato_tags::tag","",null,null],[0,"enveloped","serato_tags::tag::format","Helper for FLAC and MP4",null,null],[5,"parse_envelope","serato_tags::tag::format::enveloped","",null,[[],[["error",4],["result",4]]]],[5,"is_base64","","",null,[[]]],[5,"is_newline","","",null,[[]]],[5,"take_base64_with_newline","","",null,[[],["res",6]]],[5,"base64_decode","","",null,[[],[["error",4],["vec",3],["result",4]]]],[5,"envelope_decode","","",null,[[],[["error",4],["result",4]]]],[5,"envelope_decode_with_name","","",null,[[],[["error",4],["vec",3],["result",4]]]],[8,"EnvelopedTag","","",null,null],[11,"parse_enveloped","","",7,[[],[["result",4],["error",4]]]],[0,"flac","serato_tags::tag::format","FLAC helpers",null,null],[8,"FLACTag","serato_tags::tag::format::flac","",null,null],[18,"FLAC_COMMENT","","Name of the `VORBIS_COMMENT` that this data is stored in.",8,null],[11,"parse_flac","","",8,[[],[["result",4],["error",4]]]],[0,"id3","serato_tags::tag::format","",null,null],[8,"ID3Tag","serato_tags::tag::format::id3","",null,null],[18,"ID3_TAG","","Name of the ID3 tag that this data is stored in.",9,null],[11,"parse_id3","","",9,[[],[["result",4],["error",4]]]],[0,"mp4","serato_tags::tag::format","MP4 helpers",null,null],[8,"MP4Tag","serato_tags::tag::format::mp4","",null,null],[18,"MP4_ATOM","","Name of the `MP4_ATOM` that this data is stored in.",10,null],[11,"parse_mp4","","",10,[[],[["result",4],["error",4]]]],[0,"ogg","serato_tags::tag::format","Ogg helpers",null,null],[8,"OggTag","serato_tags::tag::format::ogg","",null,null],[18,"OGG_COMMENT","","Name of the `MP4_ATOM` that this data is stored in.",11,null],[10,"parse_ogg","","",11,[[],[["result",4],["error",4]]]],[0,"analysis","serato_tags::tag","The `Serato Analysis` tag stores the analysis version.",null,null],[3,"Analysis","serato_tags::tag::analysis","Represents the  `Serato Analysis` tag.",null,null],[12,"version","","The analysis version.",12,null],[5,"take_analysis","","",null,[[],[["analysis",3],["res",6]]]],[5,"take_ascii_u8","","",null,[[],["res",6]]],[5,"take_analysis_ogg","","",null,[[],[["analysis",3],["res",6]]]],[0,"autotags","serato_tags::tag","The `Serato Autotags` tag stores BPM and Gain values.",null,null],[3,"Autotags","serato_tags::tag::autotags","Represents the  `Serato AutoTags` tag.",null,null],[12,"version","","The tag version.",13,null],[12,"bpm","","The track\'s number of beats per minute (BPM).",13,null],[12,"auto_gain","","The track\'s autogain values (probably comparable to…",13,null],[12,"gain_db","","The track\'s gain value (manual?).",13,null],[5,"take_double_str","","Returns an `f64` parsed from zero-terminated ASCII chars…",null,[[],["res",6]]],[5,"take_autotags","","",null,[[],[["res",6],["autotags",3]]]],[0,"beatgrid","serato_tags::tag","The `Serato BeatGrid` tag stores the beatgrid markers.",null,null],[3,"TerminalMarker","serato_tags::tag::beatgrid","Represents the terminal beatgrid marker in the `Serato…",null,null],[12,"position","","The position in seconds.",14,null],[12,"bpm","","The track\'s beats per minute (BPM).",14,null],[3,"NonTerminalMarker","","Represents a non-terminal beatgrid marker in the `Serato…",null,null],[12,"position","","The position in seconds.",15,null],[12,"beats_till_next_marker","","The number of beats between this marker and the next one…",15,null],[3,"Beatgrid","","Represents the `Serato BeatGrid` tag.",null,null],[12,"version","","The analysis version.",16,null],[12,"non_terminal_markers","","Zero or more non-terminal beatgrid markers.",16,null],[12,"terminal_marker","","The terminal beatgrid marker.",16,null],[12,"footer","","A single footer byte that is apparently random (?).",16,null],[5,"take_non_terminal_marker_count","","Returns a `u32` parsed from the input slice, decremented…",null,[[],["res",6]]],[5,"take_non_terminal_marker","","Returns a non-terminal beatgrid marker parsed from the…",null,[[],[["nonterminalmarker",3],["res",6]]]],[5,"parse","","",null,[[],[["error",4],["result",4],["beatgrid",3]]]],[0,"markers","serato_tags::tag","The `Serato Markers_` tag stores information about the…",null,null],[3,"Marker","serato_tags::tag::markers","Represents a single marker in the `Serato Markers_` tag.",null,null],[12,"start_position_millis","","The position of the loop or cue.",17,null],[12,"end_position_millis","","If this is a loop, this field stores the end position.",17,null],[12,"color","","The color of the cue.",17,null],[12,"entry_type","","The type of this marker.",17,null],[12,"is_locked","","Indicates whether the loop is locked.",17,null],[3,"Markers","","Represents the `Serato Markers_` tag.",null,null],[12,"version","","The tag version.",18,null],[12,"entries","","The marker entries.",18,null],[12,"track_color","","The color of the track in Serato\'s library view.",18,null],[4,"EntryType","","The Type of a Marker.",null,null],[13,"INVALID","","",19,null],[13,"CUE","","",19,null],[13,"LOOP","","",19,null],[5,"take_bool","","Returns a bool parsed from the next input byte.",null,[[],["res",6]]],[5,"take_has_position","","Returns a bool parsed from the next input byte that…",null,[[],["res",6]]],[5,"take_position","","Returns an `Option<u32>` which contains the position…",null,[[],[["option",4],["res",6]]]],[5,"take_entry_type","","Returns the `EntryType` for the cue marker parsed from the…",null,[[],[["entrytype",4],["res",6]]]],[5,"take_marker","","Returns a `Marker` parsed from the input slice.",null,[[],[["res",6],["marker",3]]]],[5,"take_markers","","Parses the data into a `Markers` struct, consuming the…",null,[[],[["markers",3],["res",6]]]],[5,"take_marker_mp4","","Returns a `Marker` parsed from the input slice (MP4…",null,[[],[["res",6],["marker",3]]]],[5,"take_markers_mp4","","Parses the data into a `Markers` struct, consuming the…",null,[[],[["markers",3],["res",6]]]],[5,"parse","","",null,[[],[["error",4],["result",4],["markers",3]]]],[11,"cues","","",18,[[],["vec",3]]],[11,"loops","","",18,[[],["vec",3]]],[11,"track_color","","",18,[[],["color",3]]],[0,"markers2","serato_tags::tag","The `Serato Markers2` tag stores various kinds of track…",null,null],[3,"UnknownMarker","serato_tags::tag::markers2","An unknown marker that we don\'t have a parser for.",null,null],[12,"name","","",20,null],[12,"data","","",20,null],[3,"TrackColorMarker","","A `COLOR` marker.",null,null],[12,"color","","",21,null],[3,"BPMLockMarker","","A `BPMLOCK` marker.",null,null],[12,"is_locked","","",22,null],[3,"CueMarker","","A `CUE` marker.",null,null],[12,"index","","",23,null],[12,"position_millis","","",23,null],[12,"color","","",23,null],[12,"label","","",23,null],[3,"LoopMarker","","A `LOOP` marker.",null,null],[12,"index","","",24,null],[12,"start_position_millis","","",24,null],[12,"end_position_millis","","",24,null],[12,"color","","",24,null],[12,"is_locked","","",24,null],[12,"label","","",24,null],[3,"FlipMarker","","A `FLIP` marker.",null,null],[12,"index","","",25,null],[12,"is_enabled","","",25,null],[12,"label","","",25,null],[12,"is_loop","","",25,null],[12,"actions","","",25,null],[3,"CensorFlipAction","","A Censor action inside a `FLIP` marker.",null,null],[12,"start_position_seconds","","The start position of the censoring.",26,null],[12,"end_position_seconds","","The end position of the censoring.",26,null],[12,"speed_factor","","The playback speed factor (usually -1.0).",26,null],[3,"JumpFlipAction","","A Jump action inside a `FLIP` marker.",null,null],[12,"source_position_seconds","","The source position of the jump.",27,null],[12,"target_position_seconds","","The target position of the jump.",27,null],[3,"UnknownFlipAction","","An unknown `FLIP` action that we don\'t have a parser for.",null,null],[12,"id","","",28,null],[12,"data","","",28,null],[3,"Markers2","","Represents the `Serato Markers2` tag.",null,null],[12,"version","","",29,null],[12,"size","","",29,null],[12,"content","","",29,null],[3,"Markers2Content","","Represents the base64-encoded content of the `Serato…",null,null],[12,"version","","",30,null],[12,"markers","","",30,null],[4,"Marker","","A marker in the `Serato Markers2` tag.",null,null],[13,"Unknown","","",31,null],[13,"Color","","",31,null],[13,"BPMLock","","",31,null],[13,"Cue","","",31,null],[13,"Loop","","",31,null],[13,"Flip","","",31,null],[4,"FlipAction","","An action inside a `FLIP` marker.",null,null],[13,"Censor","","",32,null],[13,"Jump","","",32,null],[13,"Unknown","","",32,null],[5,"peek_nullbyte","","",null,[[],["res",6]]],[5,"peek_newline_or_nullbyte","","",null,[[],["res",6]]],[5,"take_base64_chunk","","",null,[[],["res",6]]],[5,"take_base64_chunks","","",null,[[],[["res",6],["vec",3]]]],[5,"decode_base64_chunks","","",null,[[["vec",3]],[["result",4],["err",4],["vec",3]]]],[5,"take_marker_name","","",null,[[],[["res",6],["string",3]]]],[5,"take_marker","","",null,[[],[["res",6],["marker",4]]]],[5,"take_bool","","",null,[[],["res",6]]],[5,"take_bpmlock_marker","","",null,[[],[["res",6],["marker",4]]]],[5,"take_color_marker","","",null,[[],[["res",6],["marker",4]]]],[5,"take_cue_marker","","",null,[[],[["res",6],["marker",4]]]],[5,"take_loop_marker","","",null,[[],[["res",6],["marker",4]]]],[5,"take_flip_marker","","",null,[[],[["res",6],["marker",4]]]],[5,"take_flip_marker_action","","",null,[[],[["res",6],["flipaction",4]]]],[5,"take_flip_marker_action_jump","","",null,[[],[["res",6],["flipaction",4]]]],[5,"take_flip_marker_action_censor","","",null,[[],[["res",6],["flipaction",4]]]],[5,"parse_markers2_content","","",null,[[],[["markers2content",3],["res",6]]]],[5,"take_markers2","","",null,[[],[["res",6],["markers2",3]]]],[5,"parse","","",null,[[],[["error",4],["result",4],["markers2",3]]]],[11,"bpm_locked","","",29,[[],["option",4]]],[11,"cues","","",29,[[],[["cuemarker",3],["vec",3]]]],[11,"loops","","",29,[[],[["vec",3],["loopmarker",3]]]],[11,"track_color","","",29,[[],[["color",3],["option",4]]]],[0,"overview","serato_tags::tag","The `Serato Overview` tag stores the waveform overview data.",null,null],[3,"Overview","serato_tags::tag::overview","Represents the `Serato Overview` tag.",null,null],[12,"version","","The tag version.",33,null],[12,"data","","The Waveform overview data.",33,null],[5,"take_chunk","","Returns a 16-byte vector of data parsed from the input…",null,[[],[["res",6],["vec",3]]]],[5,"take_chunks","","Returns a vector of 16-byte vectors of data parsed from…",null,[[],[["res",6],["vec",3]]]],[5,"take_overview","","",null,[[],[["res",6],["overview",3]]]],[5,"parse","","",null,[[],[["error",4],["overview",3],["result",4]]]],[0,"relvolad","serato_tags::tag","The `Serato RelVolAd` tag stores the analysis version.",null,null],[3,"RelVolAd","serato_tags::tag::relvolad","Represents the  `Serato RelVolAd` tag.",null,null],[12,"version","","The `RelVolAd` version.",34,null],[5,"take_relvolad","","",null,[[],[["res",6],["relvolad",3]]]],[5,"parse","","",null,[[],[["result",4],["relvolad",3],["error",4]]]],[0,"vidassoc","serato_tags::tag","The `Serato VidAssoc` tag stores the analysis version.",null,null],[3,"VidAssoc","serato_tags::tag::vidassoc","Represents the  `Serato VidAssoc` tag.",null,null],[12,"version","","The `VidAssoc` version.",35,null],[5,"take_vidassoc","","",null,[[],[["vidassoc",3],["res",6]]]],[0,"util","serato_tags","Various helper utilities for simplify parsing.",null,null],[3,"Color","serato_tags::util","Represents a 3-Byte RGB color value.",null,null],[12,"red","","",36,null],[12,"green","","",36,null],[12,"blue","","",36,null],[3,"Version","","Represents 2-Byte version value.",null,null],[12,"major","","",37,null],[12,"minor","","",37,null],[5,"take_color","","Returns a `Color` struct parsed from the first 3 input…",null,[[],[["res",6],["color",3]]]],[5,"take_version","","Returns a `Version` struct parsed from the first 2 input…",null,[[],[["res",6],["version",3]]]],[5,"take_until_nullbyte","","Returns the input slice until the first occurrence of a…",null,[[],["res",6]]],[5,"parse_utf8","","",null,[[],[["res",6],["string",3]]]],[5,"take_utf8","","",null,[[],[["res",6],["string",3]]]],[0,"serato32","","These functions convert between a custom 4-byte format…",null,null],[5,"decode","serato_tags::util::serato32","Decodes value from Serato\'s 32-bit custom format to 24-bit…",null,[[]]],[5,"encode","","Encodes 3-byte value to to Serato\'s 32-bit custom format.",null,[[]]],[5,"take","","Returns a 3-byte tuple decoded from the first 4 input bytes.",null,[[],["res",6]]],[5,"take_color","","Returns a `Color` decoded from the first 4 input bytes.",null,[[],[["res",6],["color",3]]]],[5,"take_u32","","Returns a `u32` decoded from the first 4 input bytes.",null,[[],["res",6]]],[6,"Res","serato_tags::util","",null,null],[8,"Tag","","",null,null],[18,"NAME","","",38,null],[10,"parse","","",38,[[],[["result",4],["error",4]]]],[11,"from","serato_tags::container","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","serato_tags::error","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","serato_tags::tag::analysis","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","serato_tags::tag::autotags","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","serato_tags::tag::beatgrid","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","serato_tags::tag::markers","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","serato_tags::tag::markers2","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","serato_tags::tag::overview","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","serato_tags::tag::relvolad","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","serato_tags::tag::vidassoc","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","serato_tags::util","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"parse_mp4","serato_tags::tag::markers","",18,[[],[["result",4],["error",4]]]],[11,"parse_ogg","serato_tags::tag::analysis","",12,[[],[["result",4],["error",4]]]],[11,"parse_ogg","serato_tags::tag::markers2","",29,[[],[["result",4],["error",4]]]],[11,"parse","serato_tags::tag::analysis","",12,[[],[["result",4],["error",4]]]],[11,"parse","serato_tags::tag::autotags","",13,[[],[["result",4],["error",4]]]],[11,"parse","serato_tags::tag::beatgrid","",16,[[],[["result",4],["error",4]]]],[11,"parse","serato_tags::tag::markers","",18,[[],[["result",4],["error",4]]]],[11,"parse","serato_tags::tag::markers2","",29,[[],[["result",4],["error",4]]]],[11,"parse","serato_tags::tag::overview","",33,[[],[["result",4],["error",4]]]],[11,"parse","serato_tags::tag::relvolad","",34,[[],[["result",4],["error",4]]]],[11,"parse","serato_tags::tag::vidassoc","",35,[[],[["result",4],["error",4]]]],[11,"from","serato_tags::error","",1,[[["error",3]]]],[11,"from","","",1,[[["err",4],["verboseerror",3]]]],[11,"clone","serato_tags::tag::markers2","",23,[[],["cuemarker",3]]],[11,"clone","","",24,[[],["loopmarker",3]]],[11,"clone","serato_tags::util","",36,[[],["color",3]]],[11,"default","serato_tags::container","",0,[[]]],[11,"eq","serato_tags::tag::markers","",19,[[["entrytype",4]]]],[11,"eq","serato_tags::util","",36,[[["color",3]]]],[11,"ne","","",36,[[["color",3]]]],[11,"eq","","",37,[[["version",3]]]],[11,"ne","","",37,[[["version",3]]]],[11,"fmt","serato_tags::error","",1,[[["formatter",3]],["result",6]]],[11,"fmt","serato_tags::tag::analysis","",12,[[["formatter",3]],["result",6]]],[11,"fmt","serato_tags::tag::autotags","",13,[[["formatter",3]],["result",6]]],[11,"fmt","serato_tags::tag::beatgrid","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","serato_tags::tag::markers","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","serato_tags::tag::markers2","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","serato_tags::tag::overview","",33,[[["formatter",3]],["result",6]]],[11,"fmt","serato_tags::tag::relvolad","",34,[[["formatter",3]],["result",6]]],[11,"fmt","serato_tags::tag::vidassoc","",35,[[["formatter",3]],["result",6]]],[11,"fmt","serato_tags::util","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","serato_tags::error","",1,[[["formatter",3]],["result",6]]],[11,"source","","",1,[[],[["option",4],["error",8]]]]],"p":[[3,"Container"],[4,"Error"],[13,"VerboseParseError"],[13,"Base64DecodeError"],[13,"Base64InvalidLengthError"],[13,"EnvelopeNameMismatch"],[13,"ReadError"],[8,"EnvelopedTag"],[8,"FLACTag"],[8,"ID3Tag"],[8,"MP4Tag"],[8,"OggTag"],[3,"Analysis"],[3,"Autotags"],[3,"TerminalMarker"],[3,"NonTerminalMarker"],[3,"Beatgrid"],[3,"Marker"],[3,"Markers"],[4,"EntryType"],[3,"UnknownMarker"],[3,"TrackColorMarker"],[3,"BPMLockMarker"],[3,"CueMarker"],[3,"LoopMarker"],[3,"FlipMarker"],[3,"CensorFlipAction"],[3,"JumpFlipAction"],[3,"UnknownFlipAction"],[3,"Markers2"],[3,"Markers2Content"],[4,"Marker"],[4,"FlipAction"],[3,"Overview"],[3,"RelVolAd"],[3,"VidAssoc"],[3,"Color"],[3,"Version"],[8,"Tag"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);